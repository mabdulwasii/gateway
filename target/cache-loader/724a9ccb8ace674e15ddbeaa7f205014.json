{"remainingRequest":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\src\\main\\webapp\\app\\config\\notification-middleware.ts","dependencies":[{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\src\\main\\webapp\\app\\config\\notification-middleware.ts","mtime":1602580486631},{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\react-hot-loader\\webpack.js","mtime":1600756010211},{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600756056917},{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1600756126485},{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\ts-loader\\index.js","mtime":1600756127041},{"path":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\eslint-loader\\dist\\cjs.js","mtime":1600756074791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgaXNQcm9taXNlLCB0cmFuc2xhdGUgfSBmcm9tICdyZWFjdC1qaGlwc3Rlcic7DQppbXBvcnQgeyB0b2FzdCB9IGZyb20gJ3JlYWN0LXRvYXN0aWZ5JzsNCmNvbnN0IGFkZEVycm9yQWxlcnQgPSAobWVzc2FnZSwga2V5LCBkYXRhKSA9PiB7DQogICAga2V5ID0ga2V5ID8ga2V5IDogbWVzc2FnZTsNCiAgICB0b2FzdC5lcnJvcih0cmFuc2xhdGUoa2V5LCBkYXRhKSk7DQp9Ow0KZXhwb3J0IGRlZmF1bHQgKCkgPT4gbmV4dCA9PiBhY3Rpb24gPT4gew0KICAgIC8vIElmIG5vdCBhIHByb21pc2UsIGNvbnRpbnVlIG9uDQogICAgaWYgKCFpc1Byb21pc2UoYWN0aW9uLnBheWxvYWQpKSB7DQogICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7DQogICAgfQ0KICAgIC8qKg0KICAgICAqDQogICAgICogVGhlIG5vdGlmaWNhdGlvbiBtaWRkbGV3YXJlIHNlcnZlcyB0byBkaXNwYXRjaCB0aGUgaW5pdGlhbCBwZW5kaW5nIHByb21pc2UgdG8NCiAgICAgKiB0aGUgcHJvbWlzZSBtaWRkbGV3YXJlLCBidXQgYWRkcyBhIGB0aGVuYCBhbmQgYGNhdGNoLg0KICAgICAqLw0KICAgIHJldHVybiBuZXh0KGFjdGlvbikNCiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gew0KICAgICAgICBpZiAoYWN0aW9uLm1ldGEgJiYgYWN0aW9uLm1ldGEuc3VjY2Vzc01lc3NhZ2UpIHsNCiAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoYWN0aW9uLm1ldGEuc3VjY2Vzc01lc3NhZ2UpOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLmFjdGlvbiAmJiByZXNwb25zZS5hY3Rpb24ucGF5bG9hZCAmJiByZXNwb25zZS5hY3Rpb24ucGF5bG9hZC5oZWFkZXJzKSB7DQogICAgICAgICAgICBjb25zdCBoZWFkZXJzID0gcmVzcG9uc2UuYWN0aW9uLnBheWxvYWQuaGVhZGVyczsNCiAgICAgICAgICAgIGxldCBhbGVydCA9IG51bGw7DQogICAgICAgICAgICBsZXQgYWxlcnRQYXJhbXMgPSBudWxsOw0KICAgICAgICAgICAgT2JqZWN0LmVudHJpZXMoaGVhZGVycykuZm9yRWFjaCgoW2ssIHZdKSA9PiB7DQogICAgICAgICAgICAgICAgaWYgKGsudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLWFsZXJ0JykpIHsNCiAgICAgICAgICAgICAgICAgICAgYWxlcnQgPSB2Ow0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBlbHNlIGlmIChrLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJ2FwcC1wYXJhbXMnKSkgew0KICAgICAgICAgICAgICAgICAgICBhbGVydFBhcmFtcyA9IGRlY29kZVVSSUNvbXBvbmVudCh2LnJlcGxhY2UoL1wrL2csICcgJykpOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgaWYgKGFsZXJ0KSB7DQogICAgICAgICAgICAgICAgY29uc3QgYWxlcnRQYXJhbSA9IGFsZXJ0UGFyYW1zOw0KICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3ModHJhbnNsYXRlKGFsZXJ0LCB7IHBhcmFtOiBhbGVydFBhcmFtIH0pKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3BvbnNlKTsNCiAgICB9KQ0KICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICBpZiAoYWN0aW9uLm1ldGEgJiYgYWN0aW9uLm1ldGEuZXJyb3JNZXNzYWdlKSB7DQogICAgICAgICAgICB0b2FzdC5lcnJvcihhY3Rpb24ubWV0YS5lcnJvck1lc3NhZ2UpOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKGVycm9yICYmIGVycm9yLnJlc3BvbnNlKSB7DQogICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGVycm9yLnJlc3BvbnNlOw0KICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgICAgICBpZiAoIShyZXNwb25zZS5zdGF0dXMgPT09IDQwMSAmJiAoZXJyb3IubWVzc2FnZSA9PT0gJycgfHwgKGRhdGEgJiYgZGF0YS5wYXRoICYmIGRhdGEucGF0aC5pbmNsdWRlcygnL2FwaS9hY2NvdW50JykpKSkpIHsNCiAgICAgICAgICAgICAgICBsZXQgaTsNCiAgICAgICAgICAgICAgICBzd2l0Y2ggKHJlc3BvbnNlLnN0YXR1cykgew0KICAgICAgICAgICAgICAgICAgICAvLyBjb25uZWN0aW9uIHJlZnVzZWQsIHNlcnZlciBub3QgcmVhY2hhYmxlDQogICAgICAgICAgICAgICAgICAgIGNhc2UgMDoNCiAgICAgICAgICAgICAgICAgICAgICAgIGFkZEVycm9yQWxlcnQoJ1NlcnZlciBub3QgcmVhY2hhYmxlJywgJ2Vycm9yLnNlcnZlci5ub3QucmVhY2hhYmxlJyk7DQogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MDA6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuZW50cmllcyhyZXNwb25zZS5oZWFkZXJzKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBlcnJvckhlYWRlciA9IG51bGw7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZW50aXR5S2V5ID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnMuZm9yRWFjaCgoW2ssIHZdKSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGsudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLWVycm9yJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JIZWFkZXIgPSB2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChrLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJ2FwcC1wYXJhbXMnKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlLZXkgPSB2Ow0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9ySGVhZGVyKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZW50aXR5TmFtZSA9IHRyYW5zbGF0ZSgnZ2xvYmFsLm1lbnUuZW50aXRpZXMuJyArIGVudGl0eUtleSk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRXJyb3JBbGVydChlcnJvckhlYWRlciwgZXJyb3JIZWFkZXIsIHsgZW50aXR5TmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEgIT09ICcnICYmIGRhdGEuZmllbGRFcnJvcnMpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZEVycm9ycyA9IGRhdGEuZmllbGRFcnJvcnM7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGZpZWxkRXJyb3JzLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkRXJyb3IgPSBmaWVsZEVycm9yc1tpXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFsnTWluJywgJ01heCcsICdEZWNpbWFsTWluJywgJ0RlY2ltYWxNYXgnXS5pbmNsdWRlcyhmaWVsZEVycm9yLm1lc3NhZ2UpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZEVycm9yLm1lc3NhZ2UgPSAnU2l6ZSc7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29udmVydCAnc29tZXRoaW5nWzE0XS5vdGhlcls0XS5pZCcgdG8gJ3NvbWV0aGluZ1tdLm90aGVyW10uaWQnIHNvIHRyYW5zbGF0aW9ucyBjYW4gYmUgd3JpdHRlbiB0byBpdA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb252ZXJ0ZWRGaWVsZCA9IGZpZWxkRXJyb3IuZmllbGQucmVwbGFjZSgvXFtcZCpcXS9nLCAnW10nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGROYW1lID0gdHJhbnNsYXRlKGBhcGlHYXRld2F5QXBwLiR7ZmllbGRFcnJvci5vYmplY3ROYW1lfS4ke2NvbnZlcnRlZEZpZWxkfWApOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRFcnJvckFsZXJ0KGBFcnJvciBvbiBmaWVsZCAiJHtmaWVsZE5hbWV9ImAsIGBlcnJvci4ke2ZpZWxkRXJyb3IubWVzc2FnZX1gLCB7IGZpZWxkTmFtZSB9KTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChkYXRhICE9PSAnJyAmJiBkYXRhLm1lc3NhZ2UpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRFcnJvckFsZXJ0KGRhdGEubWVzc2FnZSwgZGF0YS5tZXNzYWdlLCBkYXRhLnBhcmFtcyk7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRFcnJvckFsZXJ0KGRhdGEpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgY2FzZSA0MDQ6DQogICAgICAgICAgICAgICAgICAgICAgICBhZGRFcnJvckFsZXJ0KCdOb3QgZm91bmQnLCAnZXJyb3IudXJsLm5vdC5mb3VuZCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YSAhPT0gJycgJiYgZGF0YS5tZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRXJyb3JBbGVydChkYXRhLm1lc3NhZ2UpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRXJyb3JBbGVydChkYXRhKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgZWxzZSBpZiAoZXJyb3IgJiYgZXJyb3IuY29uZmlnICYmIGVycm9yLmNvbmZpZy51cmwgPT09ICdhcGkvYWNjb3VudCcgJiYgZXJyb3IuY29uZmlnLm1ldGhvZCA9PT0gJ2dldCcpIHsNCiAgICAgICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8NCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdBdXRoZW50aWNhdGlvbiBFcnJvcjogVHJ5aW5nIHRvIGFjY2VzcyB1cmwgYXBpL2FjY291bnQgd2l0aCBHRVQuJyk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSBpZiAoZXJyb3IgJiYgZXJyb3IubWVzc2FnZSkgew0KICAgICAgICAgICAgdG9hc3QuZXJyb3IoZXJyb3IubWVzc2FnZSk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSB7DQogICAgICAgICAgICB0b2FzdC5lcnJvcignVW5rbm93biBlcnJvciEnKTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOw0KICAgIH0pOw0KfTsNCg=="},{"version":3,"file":"C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\src\\main\\webapp\\app\\config\\notification-middleware.ts","sourceRoot":"","sources":["C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\node_modules\\eslint-loader\\dist\\cjs.js!C:\\Users\\NJOKU\\Desktop\\projects\\gateway\\src\\main\\webapp\\app\\config\\notification-middleware.ts"],"names":[],"mappings":"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","sourcesContent":["import { isPromise, translate } from 'react-jhipster';\nimport { toast } from 'react-toastify';\n\nconst addErrorAlert = (message, key?, data?) => {\n  key = key ? key : message;\n  toast.error(translate(key, data));\n};\nexport default () => next => action => {\n  // If not a promise, continue on\n  if (!isPromise(action.payload)) {\n    return next(action);\n  }\n\n  /**\n   *\n   * The notification middleware serves to dispatch the initial pending promise to\n   * the promise middleware, but adds a `then` and `catch.\n   */\n  return next(action)\n    .then(response => {\n      if (action.meta && action.meta.successMessage) {\n        toast.success(action.meta.successMessage);\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\n        const headers = response.action.payload.headers;\n        let alert: string | null = null;\n        let alertParams: string | null = null;\n        Object.entries<string>(headers).forEach(([k, v]) => {\n          if (k.toLowerCase().endsWith('app-alert')) {\n            alert = v;\n          } else if (k.toLowerCase().endsWith('app-params')) {\n            alertParams = decodeURIComponent(v.replace(/\\+/g, ' '));\n          }\n        });\n        if (alert) {\n          const alertParam = alertParams;\n          toast.success(translate(alert, { param: alertParam }));\n        }\n      }\n      return Promise.resolve(response);\n    })\n    .catch(error => {\n      if (action.meta && action.meta.errorMessage) {\n        toast.error(action.meta.errorMessage);\n      } else if (error && error.response) {\n        const response = error.response;\n        const data = response.data;\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.includes('/api/account'))))) {\n          let i;\n          switch (response.status) {\n            // connection refused, server not reachable\n            case 0:\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\n              break;\n\n            case 400: {\n              const headers = Object.entries<string>(response.headers);\n              let errorHeader: string | null = null;\n              let entityKey: string | null = null;\n              headers.forEach(([k, v]: [string, string]) => {\n                if (k.toLowerCase().endsWith('app-error')) {\n                  errorHeader = v;\n                } else if (k.toLowerCase().endsWith('app-params')) {\n                  entityKey = v;\n                }\n              });\n              if (errorHeader) {\n                const entityName = translate('global.menu.entities.' + entityKey);\n                addErrorAlert(errorHeader, errorHeader, { entityName });\n              } else if (data !== '' && data.fieldErrors) {\n                const fieldErrors = data.fieldErrors;\n                for (i = 0; i < fieldErrors.length; i++) {\n                  const fieldError = fieldErrors[i];\n                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                    fieldError.message = 'Size';\n                  }\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n                  const fieldName = translate(`apiGatewayApp.${fieldError.objectName}.${convertedField}`);\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\n                }\n              } else if (data !== '' && data.message) {\n                addErrorAlert(data.message, data.message, data.params);\n              } else {\n                addErrorAlert(data);\n              }\n              break;\n            }\n            case 404:\n              addErrorAlert('Not found', 'error.url.not.found');\n              break;\n\n            default:\n              if (data !== '' && data.message) {\n                addErrorAlert(data.message);\n              } else {\n                addErrorAlert(data);\n              }\n          }\n        }\n      } else if (error && error.config && error.config.url === 'api/account' && error.config.method === 'get') {\n        /* eslint-disable no-console */\n        console.log('Authentication Error: Trying to access url api/account with GET.');\n      } else if (error && error.message) {\n        toast.error(error.message);\n      } else {\n        toast.error('Unknown error!');\n      }\n      return Promise.reject(error);\n    });\n};\n"]}]}